REPONSES
 
[Question P1.1] Comment représentez-vous ces vecteurs ? Comment sont-ils organisés : quels attributs ? quelles méthodes ? quels droits d'accès ?
 
[Reponse P1.1] La classe Vecteur3D est dotée d'un seul attribut en accès privé: un vecteur de type array<double,3>. Ce type a été définit au préalable et
nommé "vecteur". Les méthodes sont publiques. Il y a des accesseurs, modificateur (set_coord()), affiche() et compare().
 
[Question P4.1] Avez-vous ajouté un constructeur de copie ? Pourquoi (justifiez votre choix) ? 
 
[Reponse P4.1] Après réflexion nous n'avons pas ajouté de constructeurs de copie. On n'utilise pas de référence ou de pointeurs dans cette classe donc le constructeur de copie par défaut devrait être suffisant.
 
[Question P4.2] Si l'on souhaitait ajouter un constructeur par coordonnées sphériques (deux angles et une longueur),
 
    a] que cela impliquerait-il au niveau des attributs de la classe ?
    b] quelle serait la difficulté majeure (voire l'impossibilité) de sa réalisation en C++ ? (C'est d'ailleurs pour cela qu'on ne vous demande pas de faire un tel constructeur !)
 
[Reponse P4.2] 
a] Pour representer une longueur et un angle, il faudrait toujours utiliser des double mais on devrait s'assurer que les attributs de la classe respecterait des contraintes conceptuelles (La longueur doit être supérieure ou égale à 0 et les angles entre 0 et 360 degré).
b] La difficulte serait d'avoir 2 constructeurs différents mais qui prennent les mêmes types d'arguments, mais ce probleme peut se resoudre en ajoutant un argument inutile aux traitements juste pour differencier les prototypes. Aussi, les opérations algébriques seraient compliquées.
 
[Question P4.3] Quels opérateurs avez vous introduits ?
[Reponse P4.3] L'opérateur << et ==.
 
[Question P7.1] Comment représentez vous la classe Integrateur ?
Expliquez votre conception (attributs, interface, ...). 
 
[Reponse P7.1] La classe Integrateur a une seule méthode (virtuelle pure). Les intégrateurs (Euler, etc...) en hériteront. On utilisera le polymorphisme pour determiner quel integrateur utiliser.
 
[Question P7.2] Quelle est la relation entre les classes Integrateur et IntegrateurEuler ? 
 
[Reponse P7.2] L'IntegrateurEuler est un Integrateur. Le Euler hérite donc de la classe Integrateur.
 
[Question P9.1] En termes de POO, quelle est donc la nature de la méthode dessine ?
[Reponse P9.1] La méthode dessine est virtuelle pure. On ne peut donc pas créer d’instance de la classe Dessinable : c’est une classe abstraite.
 
[Question P9.4] Comment représentez-vous la classe Systeme ?
Expliquez votre conception (attributs, interface, ...).
 
[Reponse P9.4] La classe Système a un vector de pointeur sur Contraintes (pour un comportement polyéorphique) et un vector de pointeurs sur des Tissus.

[Question P9.4] Où cela s'intègre-t-il dans votre projet/conception ? Quels changements cela engendre-t-il ? 

[Reponse P9.4] Nous avions deja tout préparé pour un futur comportement polymorphique, il fallait donc juste ajouter IntegrateurNewmark, sous classe de Integrateur. Pour changer dynamiquement, il a fallut remplacer l'attribut de type Integrateur* dans glwidget par un vector de ces memes elements, et ajouter un attribut entier qui parcourt les indices (et modifier le constucteur en conséquence).

